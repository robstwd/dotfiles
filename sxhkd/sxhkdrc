## ~/bspwm/sxhkdrc

########################
## Internal (bspwm):  ##
########################

# close & kill focused node
alt + {_,shift + }Escape
    bspc node --{close,kill}

# cycle the layout of the current desktop (monocle|tiled)
#~ super + t
    #~ bspc desktop --layout next

# balance windows; ie adjust the split ratios of the tree of the selected desktop so that all windows occupy the same area.
super + b
    bspc node @focused:/ --balance

# toggle floating-tiled
super + f
    if [ -z "$(bspc query -N -n focused.floating)" ]; then \                    
        bspc node focused -t floating; \                                        
    else \                                                                      
        bspc node focused -t tiled; \                                           
    fi

# toggle fullscreen-tiled
super + s
    if [ -z "$(bspc query -N -n focused.fullscreen)" ]; then \                    
        bspc node focused -t fullscreen; \                                        
    else \                                                                      
        bspc node focused -t tiled; \                                           
    fi

# toggle pseudo-tiled
super + p
    if [ -z "$(bspc query -N -n focused.pseudo_tiled)" ]; then \                    
        bspc node focused -t pseudo_tiled; \                                        
    else \                                                                      
        bspc node focused -t tiled; \                                           
    fi
# set the node flags
super + {x,k,a}
    bspc node -g {locked,sticky,private}

# move focus to last used node or desktop
super + {grave,Tab}
    bspc {node,desktop} --focus last

# Swap the selected node with the last node
super + apostrophe
    bspc node --swap last

# Swap the selected node with the biggest node on the desktop
super + m
    bspc node --swap biggest

# swap the current node with the one that is next {Up,Right,Left,Down}
super + alt + ctrl + {Left,Down,Up,Right}
    bspc node --swap {west,south,north,east}

# move focus to next node that is {Up,Right,Left,Down}
super + alt + {Up,Right,Left,Down}
    bspc node --focus {north,east,west,south}

# focus next or previous node (and cycle)
super + {_,shift + }c
    bspc node --focus {next,prev}

# move to next/previous desktop
super + {Left,Right}
    bspc desktop --focus {prev,next}

# manually preselect the splitting area of the selected node
super + ctrl + {Up,Right,Left,Down}
    bspc node -p {north,east,west,south}

# cancel the preselection for the focused node
super + ctrl + space
    bspc node -p cancel

# cancel the preselection for the focused desktop
super + ctrl + shift + space
    bspc query -N -d | xargs -I id -n 1 bspc node id -p cancel

# move focus onto a specified desktop
super + {0-9,0}
    bspc desktop --focus {0-9,0}

# Send the selected window to the given desktop.
super + shift + {0-9,0}
    bspc node --to-desktop {0-9,0}

# rotate all nodes completely/forward
super + {_,shift +,control +} r
    bspc node @focused:/ --rotate {90,180,270}

# Circulate the nodes of the selected desktop (must have more than 1)
super + {comma,period}
    bspc node @focused:/ --circulate {backward,forward}

#+ flip layout
super + {_,shift +} v
    bspc node @focused:/ --flip {vertical,horizontal}

########################
## Mouse related:     ##
########################

# Pass the pointer root coordinates for the current pointer action
#~ super + !button{1-3}
    #~ bspc pointer --track %i %i

# move the focus with the mouse
~button1
    bspc pointer --grab focus

# using the mouse, move a window, resize it from a side & resize it from the corner
super + button{1-3}
    bspc pointer --grab {move,resize_side,resize_corner}

# @ prefix, runs the command on key release events
# terminate the current pointer action.
super + @button{1-3}
    bspc pointer --ungrab

# rotate desktops with mouse wheel
super + button{4,5}
    bspc desktop --focus {prev,next}

# rotate monitors with mouse wheel
super + ctrl + button{4,5}
    bspc monitor --focus next

# focus next or previous window (and cycle) with mouse wheel
super + alt + button{4,5}
    bspc node --focus {next,prev}

########################
## External:          ##
########################

# make sxhkd reload its configuration files
super + Escape
    pkill -USR1 -x sxhkd

########################
## Applications:      ##
########################

alt + {_,shift + ,ctrl + }a
    {urxvt -e alsamixer,asunder,}
    
alt + {_,shift + ,ctrl + }b
# https://bbs.archlinux.org/viewtopic.php?id=101201
    {banshee,dbus-launch brasero,}
    
alt + {_,shift + ,ctrl + }c
    {chromium,calibre,}
    
alt + {_,shift + ,ctrl + }d
    {digikam,,}
    
alt + {_,shift + ,ctrl + }e
    {easytag,google-earth,}
    
alt + {_,shift + ,ctrl + }f
    {thunar,filezilla,firefox}
    
alt + {_,shift + ,ctrl + }g
    {geany,gramps,}
    
alt + {_,shift + ,ctrl + }h
    {hugin,ghb,}
    
alt + {_,shift + ,ctrl + }i
    {mirage,,}
    
alt + {_,shift + ,ctrl + }j
    {kpat,,}
    
alt + {_,shift + ,ctrl + }k
    {kodi,klavaro,kshisen}
    
alt + {_,shift + ,ctrl + }l
    {leafpad,,}

alt + {_,shift + ,ctrl + }m
    {meld,midori,dmenu_run -fn '-*-*-medium-r-normal-*-*-*-*-*-*-100-*-*' -p 'run:'}
    
alt + {_,shift + ,ctrl + }n
    {nitrogen,neverball,}
    
alt + {_,shift + ,ctrl + }o
    {libreoffice,openshot,}
    
alt + {_,shift + ,ctrl + }p
    {keepassx,pavucontrol,passmenu}
    
alt + {_,shift + ,ctrl + }q
    {kmahjongg,,}
    
alt + {_,shift + ,ctrl + }r
    {remmina,,}
    
alt + {_,shift + ,ctrl + }s
    {xrandr --output DVI-I-0 --off && steam,stellarium,sftpman-gtk}
    
alt + {_,shift + ,ctrl +}t
    {totem,transmission-gtk,~/bin/teamviewer_start.sh}
    
alt + {_,shift + ,ctrl +}u
    {,,}
    
alt + {_,shift + ,ctrl + }v
    {vlc,virtualbox,}
    
alt + {_,shift + ,ctrl + }w
    {inox,,}
    
alt + {_,shift + ,ctrl + }x
    {bspc config -m HDMI-0 bottom_padding 22; xfce4-panel,,}
    
alt + shift + x
    {bspc config -m HDMI-0 bottom_padding 0; killall xfce4-panel,,}
    
alt + {_,shift + ,ctrl + }y
    {vlc_tvheadend.sh,,}
    
alt + {_,shift + ,ctrl + }z
    {urxvtc -geometry 95x30,,}

# invoke rofi
ctrl + Escape    
    rofi -show window

########################
## Function keys:     ##
########################

super + F1
    notify-send "git-status dotfiles" "$(ruby $HOME/scripts/Projects/git_status/bin/get_git_status.rb $HOME/scripts/Projects/dotfiles/dotfile_repo/)"

# super + F2

# super + F3

# super + F4     # quit bspwm and friends, defined elsewhere

# super + F5

super + F6
  bspc config -d focused top_padding 0; \
  bspc config -d focused bottom_padding 0; \
  bspc config -d focused border_width 1; \
  bspc config -d focused window_gap 0

super + F7
  bspc config -d focused top_padding 10; \
  bspc config -d focused bottom_padding 20; \
  bspc config -d focused border_width 2; \
  bspc config -d focused window_gap 12

# super + F8

# super + F9

super + F10
    rsync_to_raspi.py

# super + F11

# super + F12 # quit

########################
## Exiting:           ##
########################

# screen lock with slock
super + l
    slock

# quit bspwm and friends
super + F4
    pkill -x panel; bspc quit 1

########################
## Not working:       ##
########################

# poweroff options
Super_L + {_,ctrl + }Pause
    sudo systemctl {poweroff,reboot}

super + {_,ctrl + }F12
    {systemctl poweroff,systemctl reboot}

# 'loop' example here https://github.com/baskerville/dotfiles/blob/master/sxhkdrc
super + alt + {shift + ,_}Escape
    {bspc quit 1,\
     bspc query -T > "$BSPWM_TREE"; \
        bspc query -H > "$BSPWM_HISTORY"; \
        bspc quit}

# playing with chained chords
# super + a ; v
#    # vlc

# one key to cycle through multiple actions
# super + x
#    # echo {a-c}

# record history
super + {o,i}
    bspc control --record-history off; \
    bspc window {older,newer} -f; \
    bspc control --record-history on

# adjust window gaps
super + XF86Audio{Raise,Lower}Volume
    wg=$(bspc config -d focused window_gap); \
    bspc config -d focused window_gap $((wg {+,- (wg >= 3) *} 3))

# adjust border width
alt + XF86Audio{Raise,Lower}Volume
    bw=$(bspc config -w focused border_width); \
    bspc config -w focused border_width $(($bw {+,- ($bw >= 1) *} 1))

# new floating urxvt window for small commands
super + alt + z
    bspc rule -a \* --one-shot floating=true follow=on && urxvtc -geometry 55x5+8+987
    
super + F3
    bspc rule -a \* --one-shot floating=true sticky=true follow=on && urxvtc -e internet-status-loop.sh -geometry 55x5+8+987

# Transplant the selected window to the given window
# doesn't seem to do anything
super + y
    bspc window -w last.manual

# one shot rules, preselect next window as...
super + alt + {s,f,x,X,m}
    rulc -a true '{floating,fullscreen,locked,sticky,private}=on' 'duration=1'
    
# toggle on/off all window visibility
super + z
    bspc control --toggle-visibility
    
#+ cycle to next/prev occupied desktop
super + {n,p}
    bspc desktop --focus {next,prev}.occupied

# adjust border width
ctrl + KP_{Add,Subtract}
    bw=$(bspc config -w focused border_width); \
    bspc config -w focused border_width $(($bw {+,- ($bw >= 1) *} 1))

# audio settings
#XF86Audio{Raise,Lower}Volume
#    amixer -q sset PCM 5%{+,-} unmute

#XF86AudioMute
#    amixer -q sset PCM toggle

# pulseaudio settings
# https://wiki.archlinux.org/index.php/PulseAudio/Examples#Set_the_defaulting_output_source
#~ctrl + F11
#~    pactl set-sink-volume 1 +3%

XF86AudioRaiseVolume
    pactl set-sink-volume 1 +3%

#~ctrl + F10
#~    pactl set-sink-volume 1 -- -3%

XF86AudioLowerVolume
    pactl set-sink-volume 1 -- -3%

#~ ctrl + F9
#~    pactl set-sink-mute 1 toggle

XF86AudioMute
    pactl set-sink-mute 1 toggle

# graysky's pulseaudio-ctl script
# https://github.com/graysky2/pulseaudio-ctl

ctrl + F9
    pulseaudio-ctl mute

ctrl + F10
    pulseaudio-ctl down

ctrl + F11
    pulseaudio-ctl up

# calculator
XF86Calculator
    kcalc

# screenshot
Print
    scrot -q 100
