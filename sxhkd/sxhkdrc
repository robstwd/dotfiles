## ~/bspwm/sxhkdrc

########################
## Internal (bspwm):  ##
########################

# super + alt + Escape
    # bspc quit

# close focused window
super + w
    bspc window --close

alt + {_,shift + }Escape
    bspc window --{close,kill}

# cycle the layout of the current desktop (monocle|tiled)
super + t
    bspc desktop --layout next

# balance windows; ie adjust the split ratios of the tree of the selected desktop so that all windows occupy the same area.
super + b
    bspc desktop --balance

# Set the given state for the selected window - floating, fullscreen, locked, sticky & private
super + {s,f,x,k,a}
    bspc window --toggle {floating,fullscreen,locked,sticky,private}

# move focus to last used window or desktop
super + {grave,Tab}
    bspc {window,desktop} --focus last

# Swap the selected window with the last window
super + apostrophe
    bspc window --swap last

# Transplant the selected window to the given window
# doesn't seem to do anything
super + y
    bspc window -w last.manual

# Swap the selected window with the biggest window on the desktop.
super + m
    bspc window --swap biggest

# swap the current window with the one that is next {Up,Right,Left,Down}
super + shift + {h,j,k,l}
    bspc window --swap {left,down,up,right}

super + alt + ctrl + {Left,Down,Up,Right}
    bspc window --swap {left,down,up,right}

# move focus to next window that is {Up,Right,Left,Down}
super + alt + {Up,Right,Left,Down}
    bspc window --focus {up,right,left,down}

# works, but not used
# super + {_,shift + }{h,j,k,l}
    # bspc window -{focus,swap} {left,down,up,right}

# focus next or previous window (and cycle)
super + {_,shift + }c
    bspc window --focus {next,prev}

# Circulate the windows of the selected desktop (must have more than 1)
super + {comma,period}
    bspc desktop --circulate {backward,forward}

# move to next/previous desktop
# 1) using square bracket []
super + bracket{left,right}
    bspc desktop --focus {prev,next}

# 2) using arrow keys
super + {Left,Right}
    bspc desktop --focus {prev,next}

# manually preselect the splitting area of the selected window
super + ctrl + {h,j,k,l}
    bspc window --presel {left,down,up,right}

# manually preselect the splitting area of the selected window; use a chord
super + ctrl + {Up,Right,Left,Down}
    bspc window --presel {up,right,left,down}

# cancel this manual preselection
super + ctrl + {_,shift + }space
    bspc {window --presel cancel,desktop -c}

#+ cancel presel and switch back to automatic mode
super + BackSpace
    bspc window --presel cancel

# one shot rules, preselect next window as...
super + alt + {s,f,x,X,m}
    rulc -a true '{floating,fullscreen,locked,sticky,private}=on' 'duration=1'

# Push the splitting ratio of the edge located in the given direction in relation to the selected window.
super + alt + {h,j,k,l}
    bspc window --edge {left,down,up,right} push

# Pull the splitting ratio of the edge located in the given direction in relation to the selected window.
super + alt + shift + {h,j,k,l}
    bspc window --edge {right,up,down,left} pull

# Set the splitting ratio of the selected window (0 < RATIO < 1).
super + ctrl + {1-9}
    bspc window --ratio 0.{1-9}

# moved these 2 parts into 2 separate bindings
# super + {_,shift + }{1-9,0}
    # bspc {desktop -f,window -d} {1-9,0}

# move focus onto a specified desktop
super + {1-5,0}
    bspc desktop --focus {1-5,0}

# Send the selected window to the given desktop.
super + shift + {1-5,0}
    bspc window --to-desktop {1-5,0}

# toggle on/off all window visibility
super + z
    bspc control --toggle-visibility

# switch monitors
super + Next
    bspc monitor --focus next

# adjust window gaps
alt + KP_{Add,Subtract}
    wg=$(bspc config -d focused window_gap); \
    bspc config -d focused window_gap $((wg {+,- (wg >= 3) *} 3))

#+ rotate all windows completely/forward
super + {_,shift +,control +} r
    bspc desktop --rotate {90,180,270}

#+ flip layout
super + {_,shift +} v
    bspc desktop --flip {vertical,horizontal}

#+ cycle to next/prev occupied desktop
super + {n,p}
    bspc desktop --focus {next,prev}.occupied

# adjust border width
ctrl + KP_{Add,Subtract}
    bw=$(bspc config -w focused border_width); \
    bspc config -w focused border_width $(($bw {+,- ($bw >= 1) *} 1))

# toggle pseudo-tiled window
super + ctrl + f
    bspc window --toggle pseudo_tiled

# toggle floating desktop
# this makes all forthcoming windows rendered in floating mode (or vice versa)
# Modifying the floating state of a desktop doesn't change the floating state of the existing windows.
super + shift + f
    bspc desktop --toggle floating

########################
## Mouse related:     ##
########################

# move the focus with the mouse
~button1
    bspc pointer --grab focus

# using the mouse, move a window, resize it from a side & resize it from the corner
super + button{1-3}
    bspc pointer --grab {move,resize_side,resize_corner}

# Pass the pointer root coordinates for the current pointer action
# no idea what this one does!!
super + !button{1-3}
    bspc pointer -t %i %i

# @ prefix, runs the command on key release events
# terminate the current pointer action.
super + @button{1-3}
    bspc pointer --ungrab

# toggle focus_follows_pointer
super + alt + p
    bspc config focus_follows_pointer {true,false}

# rotate desktops with mouse wheel
super + button{4,5}
    bspc desktop -f {prev,next}

# rotate monitors with mouse wheel
super + ctrl + button{4,5}
    bspc monitor --focus next

# focus next or previous window (and cycle) with mouse wheel
super + alt + button{4,5}
    bspc window --focus {next,prev}

########################
## External:          ##
########################

# make sxhkd reload its configuration files:
super + Escape
    pkill -USR1 -x sxhkd

# make compton reload its configuration files:
super + F3
    pkill -USR1 -x compton

########################
## Applications:      ##
########################

# applications
alt + {_,shift + }a
    {urxvt -e alsamixer,asunder}
alt + b
# https://bbs.archlinux.org/viewtopic.php?id=101201
    dbus-launch brasero
alt + {_,shift + }c
    {chromium,calibre}
alt + {_,shift + }d
    {digikam,darktable}
alt + e
    google-earth
alt + {_,shift + }f
    {thunar,filezilla}
alt + {_,shift + }g
    {geany,gimp}
alt + {_,shift + }h
    {hugin,ghb}
alt + {_,shift + }i
    {mirage,shotwell}
alt + j
    kpat
alt + {_,shift + }k
    {klavaro,k9copy}
alt + l
    leafpad
alt + {_,shift + }m
    {dmenu_run -fn '-*-*-medium-r-normal-*-*-*-*-*-*-100-*-*' -p 'run:',meld}
alt + n
    nitrogen
alt + {_,shift + }o
    {libreoffice,openshot}
alt + {_,shift + }p
    {keepassx,pavucontrol}
alt + q
    kmahjongg
alt + r
    remmina
alt + {_,shift + }s
    {xrandr --output DVI-I-0 --off && steam,skype}
alt + {_,shift + }t
    {transmission-gtk,~/bin/teamviewer_start.sh}
alt + u
    kshisen
alt + {_,shift + }v
    {vlc,virtualbox}
alt + w
    midori
alt + {_,shift + }x
    {xmahjongg,xfburn}
# alt + y

alt + z
    urxvtc -geometry 95x30

# dmenu
Menu
    dmenu_run -fn '-*-*-medium-r-normal-*-*-*-*-*-*-100-*-*' -p 'run:'

# audio settings
#XF86Audio{Raise,Lower}Volume
#    amixer -q sset PCM 5%{+,-} unmute

#XF86AudioMute
#    amixer -q sset PCM toggle

# pulseaudio settings
# https://wiki.archlinux.org/index.php/PulseAudio/Examples#Set_the_defaulting_output_source
#~ctrl + F11
#~    pactl set-sink-volume 1 +3%

XF86AudioRaiseVolume
    pactl set-sink-volume 1 +3%

#~ctrl + F10
#~    pactl set-sink-volume 1 -- -3%

XF86AudioLowerVolume
    pactl set-sink-volume 1 -- -3%

#~ ctrl + F9
#~    pactl set-sink-mute 1 toggle

XF86AudioMute
    pactl set-sink-mute 1 toggle

# graysky's pulseaudio-ctl script
# https://github.com/graysky2/pulseaudio-ctl

ctrl + F9
    pulseaudio-ctl mute

ctrl + F10
    pulseaudio-ctl down

ctrl + F11
    pulseaudio-ctl up

# calculator
XF86Calculator
    kcalc

# screenshot
Print
    scrot -q 100

# run interrobang launcher
super + Menu
    interrobang

# invoke rofi
# old: rofi -now -font "snap-10" -fg "#ffffff" -bg "#000000" -hlfg "#FFFFFF" -hlbg "#33b5e5" -bc "#000ac9"
alt + Tab
    rofi -now -font "snap-16" -fg "#ffffff" -bg "#000000" -hlfg "#FFFFFF" -hlbg "#33b5e5" -bc "#000ac9"
    
ctrl + Escape    
    rofi -now -font "snap-16" -fg "#ffffff" -bg "#000000" -hlfg "#FFFFFF" -hlbg "#33b5e5" -bc "#000ac9"

########################
## Function keys:     ##
########################

super + F1
    notify-send "git-status dotfiles" "$(ruby $HOME/scripts/Projects/git_status/bin/get_git_status.rb $HOME/scripts/Projects/dotfiles/dotfile_repo/)"

super + F2
    dmenu_dismount

# super + F3     # compton reload, defined elsewhere

# super + F4     # quit bspwm and friends, defined elsewhere

# toggle the mouse polling setting 0 <=> 50
super + F5
    sudo mousepoll_toggle.sh

super + F6
  bspc config -d focused top_padding 0; \
  bspc config -d focused bottom_padding 0; \
  bspc config -d focused border_width 1; \
  bspc config -d focused window_gap 0

super + F7
  bspc config -d focused top_padding 10; \
  bspc config -d focused bottom_padding 20; \
  bspc config -d focused border_width 2; \
  bspc config -d focused window_gap 12

super + F8
   plank

super + F9
    python-mounts.py

super + F10
    rsync_to_raspi.py

# super + F11

# super + F12

########################
## Exiting:           ##
########################

# screen lock with slock
super + l
    slock

# quit bspwm and friends
super + F4
    pkill -x panel; bspc quit 1

# poweroff options
Super_L + {_,ctrl + }Pause
    sudo systemctl {poweroff,reboot}

super + {_,ctrl + }F12
    {poweroff,reboot}

# 'loop' example here https://github.com/baskerville/dotfiles/blob/master/sxhkdrc
super + alt + {shift + ,_}Escape
    {bspc quit 1,\
     bspc query -T > "$BSPWM_TREE"; \
        bspc query -H > "$BSPWM_HISTORY"; \
        bspc quit}

########################
## Testing:           ##
########################

# playing with chained chords
# super + a ; v
    # vlc

# one key to cycle through multiple actions
# super + x
    # echo {a-c}

# record history
super + {o,i}
    bspc control --record-history off; \
    bspc window {older,newer} -f; \
    bspc control --record-history on

# adjust window gaps
super + XF86Audio{Raise,Lower}Volume
    wg=$(bspc config -d focused window_gap); \
    bspc config -d focused window_gap $((wg {+,- (wg >= 3) *} 3))

# adjust border width
alt + XF86Audio{Raise,Lower}Volume
    bw=$(bspc config -w focused border_width); \
    bspc config -w focused border_width $(($bw {+,- ($bw >= 1) *} 1))

# using the mouse to close a window, like windows 8
super + alt + button1
    bspc pointer --grab $(bspc window --close)

# new floating urxvt window for small commands
super + alt + z
    bspc rule -a \* --one-shot floating=true follow=on && urxvtc -geometry 55x5+8+987

