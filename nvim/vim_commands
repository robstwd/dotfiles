j - move cursor down
k - move cursor up
h - move cursor left
l - move cursor right

:q - quit
:w - write

x - delete char under cursor
i - to insert text (before the cursor)

A - append text at end of line

dw - delete word (with cursor on first letter of word)
d$ - delete to the end of the line

motions:
w - until the start of the next word (excluding its first character)
e - to the end of the current word (including the last character)
$ - to the end of the line (including the last character)

2w - 2 of the above w movement
3e - 3 of the above e movement

0 (zero) - move to the start of the line

d2w - delete 2 words (alter number to suit)
dd - delete whole line
2dd - delete 2 lines

u - undo the last change
U - return the whole line to its previous state

p - puts text that has been deleted (ie stored in the vim register)
rx - replace the character at the cursor with x

ce - change until the end of the word
c$ - change until the end of the line

G - move to bottom of file
gg - move to top of file
43G - move to line no 43

search
/searchterm <enter> - searches for the term 'searchterm'
n - searches again (down)
N - searches again (up)
? - searches for phrase in upwards direction
<Ctrl-o> - go back to where you were
<Ctrl-i> - go forward

% - find matching ), }, ]

:s/old/new/ - substitute "new" for "old", the first instance
:s/old/new/g - substitute "new" for "old", all in that line
:48,67s/old/new/g - as above, between the lines 48 & 67
:%s/old/new/g - change the terms throughout the file
:%s/old/new/gc - as above, with confirmation

:e - reload the current file if it has changed on disk, outside of vim

:!<cmd> - shell out with the <cmd> command (eg :!ls)

v - enter visual mode, in order to select text
  - move with usual keys to expand selection
  - operate on selection with eg d to delete

:w FILENAME - save as the file

:r FILENAME - retrieve the contents of FILENAME and add to text
:r !ls - read the output of any command and add to file




(line 510)
